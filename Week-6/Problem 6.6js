/**
 * @param {number[]} nums
 * @return {number[][]}
 */
const threeSumClosest = (nums, target) => {
    nums.sort((a, b) => a - b);
    let closest = Number.MAX_SAFE_INTEGER;
    for (let i = 0; i < nums.length - 2; i++) {
        let left = i + 1;
        let right = nums.length - 1;
        while (left < right) {
            let sum = nums[i] + nums[left] + nums[right];
            if (sum === target) {
                return target;
            }
            if (Math.abs(sum - target) < Math.abs(closest - target)) {
                closest = sum;
            }
            if (sum < target) {
                left++;
            } else {
                right--;
            }
        }
    }
    return closest;
};

console.log(threeSumClosest([-1, 2, 1 ,-4],1));

#time complexity : o(n^2)
#space complexity: o(1)
